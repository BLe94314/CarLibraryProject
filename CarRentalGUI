package application;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javafx.application.Application;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.input.KeyCode;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.BorderWidths;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.VBox;
import javafx.scene.control.ListView;
import javafx.scene.control.Label;
import javafx.scene.text.Text;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.FlowPane;

public class CarRentalGUI extends Application {

	@Override // Override the start method in the Application class
	  public void start(Stage primaryStage) {
		//create a VBox to hold the StackPane and BorderPane
		VBox root = new VBox();
		
		//create a StackPane for the title bar
		StackPane titlePane = new StackPane();	
		
		//create a label for the title
		Label titleLabel = new Label ("Car Rental Program");
		titleLabel.setStyle("-fx-font-size: 20; -fx-weight: bold;");
		titleLabel.setPadding(new Insets(10));
		
		//create a BorderPane for the main content
		BorderPane carInfo = new BorderPane();
		
		//place the title in a VBox
		VBox titleBox = new VBox(10);
		titleBox.getChildren().add(titleLabel);
		titleBox.setAlignment(Pos.CENTER);
		
		//set the background color for the title bar
		titleBox.setStyle("-fx-background-color: lightblue; -fx-alignment: center;");
		
		//set the width of the titleBox to 100% of the StackPane
		titleBox.prefWidthProperty().bind(titlePane.widthProperty());
		
		//add the titleBox to the StackPane
		titlePane.getChildren().add(titleBox);
		
		//add the titlePane (StackPane) to the VBox
		root.getChildren().addAll(titlePane, carInfo);
		
		//create a CarInventory object with vehicles in it
		CarInventory inventory = new CarInventory(6);
		
		//add cars to the inventory
		Car car1 = new Car("Tundra", "Toyota", 2020, "Red", 4, 123456);
		Calendar registrationDate1 = Calendar.getInstance();
		registrationDate1.set(2020, Calendar.JANUARY, 1);
		OwnerInfo owner1 = new OwnerInfo("John", "Doe", "CA", registrationDate1, 0.0, "XYZ Motors", "ABC123");
		inventory.addCar(car1, owner1);
		 
		Car car2 = new Car("Civic", "Honda", 2018, "Blue", 4, 789012);
		Calendar registrationDate2 = Calendar.getInstance();
		registrationDate2.set(2018, Calendar.MARCH, 15);
		OwnerInfo owner2 = new OwnerInfo("Jane", "Smith", "NY", registrationDate2, 0.0, "ABC Autos", "DEF456");
		inventory.addCar(car2, owner2);
			 
		Car car3 = new Car("Bronco", "Ford", 2019, "Black", 4, 345678);
		Calendar registrationDate3 = Calendar.getInstance();
		registrationDate3.set(2019, Calendar.MAY, 20);
		OwnerInfo owner3 = new OwnerInfo("Bob", "Johnson", "TX", registrationDate3, 1500.0, "123 Cars", "GHI789");
		inventory.addCar(car3, owner3);
		
		Car car4 = new Car("Equinox", "Chevrolet", 2017, "Silver", 4, 901234);
		Calendar registrationDate4 = Calendar.getInstance();
		registrationDate4.set(2017,Calendar.JULY, 10);
		OwnerInfo owner4 = new OwnerInfo("Alice", "Brown", "FL", registrationDate4, 3000.0, "XYZ Autos", "JKL012");
		
		
		// inventory.addCar(new Car("Model 3", "Tesla", 2021, "White", 4, 567890), new OwnerInfo("Michael", "Lee", "CA", new Date(2021, 9, 5), 10000.0, "Tesla Motors", "MNO345"));
		// inventory.addCar(new Car("X5", "BMW", 2016, "Gray", 4, 123789), new OwnerInfo("Emily", "Davis", "WA", new Date(2016, 11, 20), 5000.0, "BMW Cars", "PQR678"));	 
		 
		//create HBox to hold inventory information
		HBox inventoryBox = new HBox();
		inventoryBox.setPadding(new Insets(10));
		inventoryBox.setSpacing(10);
		
		// Create GridPane to hold inventory information
		GridPane inventoryGrid = new GridPane();
		inventoryGrid.setPadding(new Insets(10));
		inventoryGrid.setHgap(15);
		inventoryGrid.setVgap(5);

		// Add column labels
		Label makeColumnLabel = new Label("Make");
		Label modelColumnLabel = new Label("Model");
		Label yearColumnLabel = new Label("Year");
		Label colorColumnLabel = new Label("Color");
		Label vinColumnLabel = new Label("VIN");
		Label ownerColumnLabel = new Label("Owner");

		// Add column labels to the grid
		inventoryGrid.add(makeColumnLabel, 0, 0);
		inventoryGrid.add(modelColumnLabel, 1, 0);
		inventoryGrid.add(yearColumnLabel, 2, 0);
		inventoryGrid.add(colorColumnLabel, 3, 0);
		inventoryGrid.add(vinColumnLabel, 4, 0);
		inventoryGrid.add(ownerColumnLabel, 5, 0);

		// Add each car's information to the GridPane
		int rowIndex = 1; // Start from row 1 to leave row 0 for column labels
		for (Car car : inventory.getCars()) {
		    if (car != null && car.getOwnerInfo() != null) {
		        // Create labels for car information
		        Label makeLabel = new Label(car.getMake());
		        Label modelLabel = new Label(car.getModel());
		        Label yearLabel = new Label(Integer.toString(car.getYear()));
		        Label colorLabel = new Label(car.getColor());
		        Label vinLabel = new Label(Integer.toString(car.getVin()));
		        Label ownerLabel = new Label(car.getOwnerInfo().getFirstName() + " " + car.getOwnerInfo().getLastName());

		        // Add labels to the GridPane
		        inventoryGrid.add(makeLabel, 0, rowIndex);
		        inventoryGrid.add(modelLabel, 1, rowIndex);
		        inventoryGrid.add(yearLabel, 2, rowIndex);
		        inventoryGrid.add(colorLabel, 3, rowIndex);
		        inventoryGrid.add(vinLabel, 4, rowIndex);
		        inventoryGrid.add(ownerLabel, 5, rowIndex);

		        // Increment row index for the next car
		        rowIndex++;
		    }
		}
		
		//add grid to inventoryBox and align
		inventoryBox.getChildren().addAll(inventoryGrid);
		inventoryBox.setAlignment(Pos.CENTER_LEFT);
		
		//set the inventoryBox (HBox) as the center of the BorderPane
		carInfo.setCenter(inventoryBox);
		
		//create the main scene
		Scene scene = new Scene(root, 500, 500);
		
		//set the scene and show the stage
		primaryStage.setScene(scene);
		primaryStage.setTitle("Car Rental Program");
		primaryStage.show();
		
		
	}

	public static void main(String[] args) {
  		Application.launch(args);
	}
	
}

